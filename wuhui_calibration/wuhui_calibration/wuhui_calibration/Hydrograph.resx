<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="axTChartHydrograph.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAJQkAAAIB
        AAAAAQAAAAAAAAAAAAAAABAJAABUUEYwC1RDaGFydENoYXJ0AARMZWZ0AhsDVG9wAjYFV2lkdGgDPgIG
        SGVpZ2h0AxkBElRpdGxlLlRleHQuU3RyaW5ncwEGASAADVRpdGxlLlZpc2libGUIGEJvdHRvbUF4aXMu
        VGl0bGUuQ2FwdGlvbgYEVGltZR1Cb3R0b21BeGlzLlRpdGxlLkZvbnQuQ2hhcnNldAcMQU5TSV9DSEFS
        U0VUHEJvdHRvbUF4aXMuVGl0bGUuRm9udC5IZWlnaHQC8hpCb3R0b21BeGlzLlRpdGxlLkZvbnQuTmFt
        ZQYPVGltZXMgTmV3IFJvbWFuG0JvdHRvbUF4aXMuVGl0bGUuRm9udC5TdHlsZQsGZnNCb2xkABNEZXB0
        aEF4aXMuQXV0b21hdGljCBpEZXB0aEF4aXMuQXV0b21hdGljTWF4aW11bQgaRGVwdGhBeGlzLkF1dG9t
        YXRpY01pbmltdW0IEURlcHRoQXhpcy5NYXhpbXVtBQAAAAAAAACA/j8RRGVwdGhBeGlzLk1pbmltdW0F
        AAAAAAAAAID+vxJMZWZ0QXhpcy5BdXRvbWF0aWMIGUxlZnRBeGlzLkF1dG9tYXRpY01heGltdW0IGUxl
        ZnRBeGlzLkF1dG9tYXRpY01pbmltdW0IEExlZnRBeGlzLk1heGltdW0FAAAAAAAAQOEIQBBMZWZ0QXhp
        cy5NaW5pbXVtBQAAAAAAAACwB0AWTGVmdEF4aXMuVGl0bGUuQ2FwdGlvbgYQRGlzY2hhcmdlIC8gbTMv
        cxtMZWZ0QXhpcy5UaXRsZS5Gb250LkNoYXJzZXQHDEFOU0lfQ0hBUlNFVBpMZWZ0QXhpcy5UaXRsZS5G
        b250LkhlaWdodALyGExlZnRBeGlzLlRpdGxlLkZvbnQuTmFtZQYPVGltZXMgTmV3IFJvbWFuGUxlZnRB
        eGlzLlRpdGxlLkZvbnQuU3R5bGULBmZzQm9sZAAQTGVnZW5kLkFsaWdubWVudAcFbGFUb3ASTGVnZW5k
        LkxlZ2VuZFN0eWxlBwhsc1NlcmllcxFMZWdlbmQuU2hhZG93U2l6ZQIAEkxlZ2VuZC5WZXJ0U3BhY2lu
        ZwIBE1JpZ2h0QXhpcy5BdXRvbWF0aWMIGlJpZ2h0QXhpcy5BdXRvbWF0aWNNYXhpbXVtCBpSaWdodEF4
        aXMuQXV0b21hdGljTWluaW11bQgWUmlnaHRBeGlzLkdyaWQuVmlzaWJsZQgSUmlnaHRBeGlzLkludmVy
        dGVkCRFSaWdodEF4aXMuTWF4aW11bQUAAAAAAAAA8whAEVJpZ2h0QXhpcy5NaW5pbXVtBQAAAAAAAAC4
        B0AVUmlnaHRBeGlzLlRpdGxlLkFuZ2xlAloXUmlnaHRBeGlzLlRpdGxlLkNhcHRpb24GElByZWNpcGl0
        YXRpb24gLyBtbRxSaWdodEF4aXMuVGl0bGUuRm9udC5DaGFyc2V0BwxBTlNJX0NIQVJTRVQbUmlnaHRB
        eGlzLlRpdGxlLkZvbnQuSGVpZ2h0AvIZUmlnaHRBeGlzLlRpdGxlLkZvbnQuTmFtZQYPVGltZXMgTmV3
        IFJvbWFuGlJpZ2h0QXhpcy5UaXRsZS5Gb250LlN0eWxlCwZmc0JvbGQAD1RvcEF4aXMuVmlzaWJsZQgG
        VmlldzNECAxQcmludE1hcmdpbnMBAg8CHQIPAh0AAAtUTGluZVNlcmllcwdTZXJpZXMxEU1hcmtzLkFy
        cm93TGVuZ3RoAggNTWFya3MuVmlzaWJsZQgLU2VyaWVzQ29sb3IHBmNsQmx1ZQVUaXRsZQYLT2JzZXJ2
        YXRpb24LQnJ1c2guQ29sb3IHBmNsQmx1ZQ1MaW5lUGVuLkNvbG9yBwZjbEJsdWUNTGluZVBlbi5XaWR0
        aAICE1BvaW50ZXIuQnJ1c2guQ29sb3IHBmNsQmx1ZRZQb2ludGVyLkluZmxhdGVNYXJnaW5zCRNQb2lu
        dGVyLlBlbi5WaXNpYmxlCA1Qb2ludGVyLlN0eWxlBwhwc0NpcmNsZQ9Qb2ludGVyLlZpc2libGUJEFhW
        YWx1ZXMuRGF0ZVRpbWUJDFhWYWx1ZXMuTmFtZQYBWA1YVmFsdWVzLk9yZGVyBwtsb0FzY2VuZGluZxBZ
        VmFsdWVzLkRhdGVUaW1lCAxZVmFsdWVzLk5hbWUGAVkNWVZhbHVlcy5PcmRlcgcGbG9Ob25lAAALVExp
        bmVTZXJpZXMHU2VyaWVzMBFNYXJrcy5BcnJvd0xlbmd0aAIIDU1hcmtzLlZpc2libGUIC1Nlcmllc0Nv
        bG9yBwVjbFJlZAVUaXRsZQYKU2ltdWxhdGlvbgtCcnVzaC5Db2xvcgcFY2xSZWQNTGluZVBlbi5Db2xv
        cgcFY2xSZWQNTGluZVBlbi5XaWR0aAICE1BvaW50ZXIuQnJ1c2guQ29sb3IHBWNsUmVkFlBvaW50ZXIu
        SW5mbGF0ZU1hcmdpbnMJE1BvaW50ZXIuUGVuLlZpc2libGUIDVBvaW50ZXIuU3R5bGUHCHBzQ2lyY2xl
        D1BvaW50ZXIuVmlzaWJsZQkQWFZhbHVlcy5EYXRlVGltZQkMWFZhbHVlcy5OYW1lBgFYDVhWYWx1ZXMu
        T3JkZXIHC2xvQXNjZW5kaW5nEFlWYWx1ZXMuRGF0ZVRpbWUIDFlWYWx1ZXMuTmFtZQYBWQ1ZVmFsdWVz
        Lk9yZGVyBwZsb05vbmUAABBUSGlzdG9ncmFtU2VyaWVzB1NlcmllczMRTWFya3MuQXJyb3dMZW5ndGgC
        CA1NYXJrcy5WaXNpYmxlCAtTZXJpZXNDb2xvcgQAgP8ABVRpdGxlBg1QcmVjaXBhdGl0aW9uCFZlcnRB
        eGlzBwphUmlnaHRBeGlzC0JydXNoLkNvbG9yBACA/wAOTGluZXNQZW4uQ29sb3IEAID/ABBYVmFsdWVz
        LkRhdGVUaW1lCQxYVmFsdWVzLk5hbWUGAVgNWFZhbHVlcy5PcmRlcgcGbG9Ob25lEFlWYWx1ZXMuRGF0
        ZVRpbWUIDFlWYWx1ZXMuTmFtZQYBWQ1ZVmFsdWVzLk9yZGVyBwZsb05vbmUAAAAAAAAAAgAAAAD/////
        Cw==
</value>
  </data>
</root>